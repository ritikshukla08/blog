import Head from "next/head";
import { ArticlesCardsGrid } from "../components/Blogs";
import axios from "axios";
import { Footer } from "../components/Footer";
import HeaderSearch from "../components/HeaderSearch";
import { HeroImageRight } from "../components/HeroHeader";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";

export default function Home(props) {
  const [allBlogs, setAllBlogs] = useState(props.blogData);
  const [press, setPress] = useState(false);
  const [loading, setLoading] = useState(false);
  const routes = useRouter();

  const cur = routes.query.page || 1;

  useEffect(() => {
    const fetchOnPagination = async () => {
      setLoading(true);

      const response = await fetch(
        `http://tss.local/wp-json/wp/v2/posts?page=${cur}&per_page=9&_embed`
      );
      const data = await response.json();

      setPress(true);
      setAllBlogs(data);
      setLoading(false);
    };

    if (routes.isReady) {
      fetchOnPagination();
    }
  }, [routes, press]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <HeaderSearch />
      </header>
      <main>
        <HeroImageRight />
        <ArticlesCardsGrid
          data={allBlogs}
          cur={+routes.query.page || 1}
          total={props.totalPages}
          loading={loading}
        />
      </main>
      <footer>
        <Footer />
      </footer>
    </div>
  );
}

export async function getStaticProps() {
  let page = 1;

  const response = await axios.get(
    `http://tss.local/wp-json/wp/v2/posts?page=${page}&per_page=9&_embed`
  );

  const blogData = response;

  const totalPages = response.headers["x-wp-totalpages"];
  return {
    props: {
      blogData: blogData.data,
      totalPages: new Array(+totalPages).fill("item"),
      page,
    },
  };
}
